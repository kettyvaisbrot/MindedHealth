name: Django CI/CD with SQLite and Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Continuous Integration (CI) job to test the app
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test

  # Continuous Deployment (CD) job to deploy the app to EC2
  deploy:
    needs: build  # Ensure deployment happens only after CI tests pass
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: |
        docker build -t your-dockerhub-username/mindedhealth .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub
      run: |
        docker push your-dockerhub-username/mindedhealth

    - name: SSH to EC2 and Deploy
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          # Navigate to the project directory on your EC2 instance
          cd /path/to/your/project
          # Pull the latest Docker image from Docker Hub
          docker pull your-dockerhub-username/mindedhealth
          # Rebuild and restart the app using Docker Compose
          docker-compose -f docker-compose.yml up -d
